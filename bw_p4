% File 'bw'
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% sort and object declaration
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
step(0..maxstep).
astep(0..maxstep-1).
#domain step(ST).
#domain astep(T).
#domain block(B).
#domain block(B1).
#domain location(L).
#domain location(L1).

% every block is a location (if B is a block, then it's a location; subset)
location(B) :- block(B).

% the table is a location
location(table).

%%%%%%%%%%%%%%%%%%%%%%%%%%
% state description
%%%%%%%%%%%%%%%%%%%%%%%%%%

%% on(B,L) is a function from B to L

% uniqueness constraint
:- not 1{on(B,LL,ST): location(LL)}1.

% two blocks can't be on the same block at the same time
:- 2{on(BB,B,ST): block(BB)}.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% effect and preconditions of action
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% effect of moving a block
on(B,L,T+1) :- move(B,L,T).

% concurrent actions are limited by the number of grippers
:- not {move(BB,LL,T): block(BB): location(LL)} grippers.

% a block can be moved only when it is clear
:- move(B,L,T), on(B1,B,T).

% a block can't be moved onto a block that is being moved also
:- move(B,B1,T), move(B1,L,T).

% serialize block movement: 
% no block may be moved onto a block that was moved last
%:- move(B,L,T), move(B1,B2,T), on(B,B3,T).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% domain independent axioms
%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% fluents are initially exogenous
{on(B,L,0)}.

% actions are exogenous
{move(BB,LL,T): block(BB): location(LL)}.

% commonsense law of inertia
{on(B,L,T+1)} :- on(B,L,T).

%%%%%%%%%%%%%%%%%%%
% Planning problem
%%%%%%%%%%%%%%%%%%%
% use digits 1..15 to represent letters a..o
% 1  2  3  4  5  6  7  8  9 10 11 12 13 14 15
% a  b  c  d  e  f  g  h  i  j  k  l  m  n  o

block(1..15).

% initial state
:- not on(13, table, 0).
:- not on(12, 13, 0).
:- not on( 1, 12, 0).
:- not on( 2,  1, 0).
:- not on( 3,  2, 0).
:- not on(15, table, 0).
:- not on(14, 15, 0).
:- not on( 4, 14, 0).
:- not on( 5,  4, 0).
:- not on(10,  5, 0).
:- not on(11, 10, 0).
:- not on( 6, table, 0).
:- not on( 7,  6, 0).
:- not on( 8,  7, 0).
:- not on( 9,  8, 0).

% goal condition
:- not on( 5, 10, maxstep).
:- not on( 1,  5, maxstep).
:- not on(14,  1, maxstep).
:- not on( 9,  4, maxstep).
:- not on( 8,  9, maxstep).
:- not on(13,  8, maxstep).
:- not on(15, 13, maxstep).
:- not on(11,  7, maxstep).
:- not on( 3, 11, maxstep).
:- not on( 2,  3, maxstep).
:- not on(12,  2, maxstep).

#hide.
#show move/3.

